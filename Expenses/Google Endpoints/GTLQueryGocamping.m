/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryGocamping.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   gocamping/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryGocamping (18 custom class methods, 9 custom properties)

#import "GTLQueryGocamping.h"

#import "GTLGocampingCampingTripCollection.h"
#import "GTLGocampingCampingTripValidationResult.h"
#import "GTLGocampingCampingTripWrapper.h"
#import "GTLGocampingExpense.h"
#import "GTLGocampingExpenseCollection.h"
#import "GTLGocampingFamiliesWrapper.h"
#import "GTLGocampingFamily.h"
#import "GTLGocampingFamilyRSVPWrapper.h"
#import "GTLGocampingMember.h"
#import "GTLGocampingMemberCollection.h"
#import "GTLGocampingUserAccount.h"

@implementation GTLQueryGocamping

@dynamic campingTripId, expenseID, familyId, familyID, fields, memberId,
         password, phoneNumber, registeredPhoneNumber;

#pragma mark - Service level methods
// These create a GTLQueryGocamping object.

+ (instancetype)queryForAddExpenseWithObject:(GTLGocampingExpense *)object
                               campingTripId:(long long)campingTripId {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.addExpense";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.campingTripId = campingTripId;
  return query;
}

+ (instancetype)queryForAddMemberWithObject:(GTLGocampingMember *)object
                                   familyID:(long long)familyID
                              campingTripId:(long long)campingTripId {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.addMember";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.familyID = familyID;
  query.campingTripId = campingTripId;
  return query;
}

+ (instancetype)queryForCreateCampingTripWithObject:(GTLGocampingCampingTripWrapper *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.createCampingTrip";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGocampingCampingTripValidationResult class];
  return query;
}

+ (instancetype)queryForDeleteCampingTripWithCampingTripId:(long long)campingTripId {
  NSString *methodName = @"gocamping.deleteCampingTrip";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.campingTripId = campingTripId;
  return query;
}

+ (instancetype)queryForDeleteExpenseWithExpenseID:(long long)expenseID
                                     campingTripId:(long long)campingTripId {
  NSString *methodName = @"gocamping.deleteExpense";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.expenseID = expenseID;
  query.campingTripId = campingTripId;
  return query;
}

+ (instancetype)queryForDeleteFamilyWithFamilyId:(long long)familyId {
  NSString *methodName = @"gocamping.deleteFamily";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.familyId = familyId;
  return query;
}

+ (instancetype)queryForDeleteMemberWithMemberId:(long long)memberId
                                        familyId:(long long)familyId
                                   campingTripId:(long long)campingTripId {
  NSString *methodName = @"gocamping.deleteMember";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.memberId = memberId;
  query.familyId = familyId;
  query.campingTripId = campingTripId;
  return query;
}

+ (instancetype)queryForDeletUserWithRegisteredPhoneNumber:(long long)registeredPhoneNumber {
  NSString *methodName = @"gocamping.deletUser";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.registeredPhoneNumber = registeredPhoneNumber;
  return query;
}

+ (instancetype)queryForGetAllFamilyExpensesWithFamilyID:(long long)familyID {
  NSString *methodName = @"gocamping.getAllFamilyExpenses";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.familyID = familyID;
  query.expectedObjectClass = [GTLGocampingExpenseCollection class];
  return query;
}

+ (instancetype)queryForGetAllFamilyMembersWithFamilyId:(long long)familyId {
  NSString *methodName = @"gocamping.getAllFamilyMembers";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.familyId = familyId;
  query.expectedObjectClass = [GTLGocampingMemberCollection class];
  return query;
}

+ (instancetype)queryForGetCampingTripsWithObject:(GTLGocampingUserAccount *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.getCampingTrips";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLGocampingCampingTripCollection class];
  return query;
}

+ (instancetype)queryForGetFamilyWithFamilyID:(long long)familyID {
  NSString *methodName = @"gocamping.getFamily";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.familyID = familyID;
  query.expectedObjectClass = [GTLGocampingFamily class];
  return query;
}

+ (instancetype)queryForGetMemberWithMemberId:(long long)memberId {
  NSString *methodName = @"gocamping.getMember";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.memberId = memberId;
  query.expectedObjectClass = [GTLGocampingMember class];
  return query;
}

+ (instancetype)queryForInviteFamiliesWithObject:(GTLGocampingFamiliesWrapper *)object
                                   campingTripId:(long long)campingTripId {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.inviteFamilies";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.campingTripId = campingTripId;
  return query;
}

+ (instancetype)queryForLoginWithPhoneNumber:(long long)phoneNumber
                                    password:(NSString *)password {
  NSString *methodName = @"gocamping.login";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.phoneNumber = phoneNumber;
  query.password = password;
  query.expectedObjectClass = [GTLGocampingUserAccount class];
  return query;
}

+ (instancetype)queryForRegisterUserWithObject:(GTLGocampingUserAccount *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.registerUser";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (instancetype)queryForRsvpForTheFamilyWithObject:(GTLGocampingFamilyRSVPWrapper *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.rsvpForTheFamily";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (instancetype)queryForUpdateExpenseWithObject:(GTLGocampingExpense *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"gocamping.updateExpense";
  GTLQueryGocamping *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

@end
